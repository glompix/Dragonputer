@import "bootstrap/bootstrap.less";
@import "cs-mixins.less";
@import "cs-forms.less";

.danger {
    .has-error;
}
.clearfix {
    clear: both;
}

body {
    background: #666;
    padding-top: @navbar-height;
    background-size: cover;
}

.app-modals {
    background: fade(@body-bg, .9);
    position: fixed;
    top: @navbar-height;
    bottom: 0;
    width: 100%;
    display: none;
    overflow-y: auto;
    z-index: 999;
    -webkit-overflow-scrolling: touch;
}
.modal-active .app-modals {
    display: block;
}
/* New character form */
.new-character {
    .modal-dialog;
    .container;
    width: 100%;
    max-width: 800px;
    margin: 35px auto;

    @media (max-width: 800px) {
        margin: 0 auto;
        padding: 0;
    }

    #NewCharacterName {
        .form-control;
    }

    .new-character-body {
        .modal-body;
        .make-row();
        margin-left: 0; margin-right: 0;
        .left-panel {
            .make-sm-column(6);
        }
        .right-panel {
            .make-sm-column(6);
        }
    }

    ul { 
        margin: 10px 0; 
        padding: 0 10px; 
    }

    .prototype-alert {
        .alert;
        .alert-warning;

        strong {
            display: block;
            margin: 0 0 5px 0;
        }
    }

    .new-character-actions {
        .text-right;
        margin: 10px 0;
    }

    &.ng-hide {
        transition: 0.5s linear all;
        display: block !important;
        position: absolute;
        top: 3000px;
        .opacity(0);
    }
}

.character-sheet {
    .container-fixed;
    background-color: fade(@body-bg, .9);
    position: fixed;
    width: 100%;
    top: @navbar-height;
    bottom: 0; 
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
}
.modal-active .character-sheet,
.modal-active .character-sheet * {
    overflow-x: hidden;
    overflow-y: hidden;
}

.cs-section {
    padding: 10px;
    width: 375px;
    position: absolute;
    top: 0;
    bottom: 0;
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;

    border-right: 1px solid #000;
    &:last-child {
        border-right: none;
    }

    /* Fit to width on mobile phones. */
    @media (max-width: @screen-xs-min)
    {
        min-width: 375px;
        width: 100%;
    }
}

/* ====== MENU BAR ======= */
.app-bar {
    .navbar;
    .navbar-inverse;
    .navbar-fixed-top;
    margin: 0;
}

.app-logo {
    .navbar-brand;
    color: #ddd;
    .text-overflow;
}

.app-playing-as {
    .text-muted;
    font-size: 80%;
}

.user-menu {
    float: right;
}

.user-menu-links {
    .nav;
    .navbar-nav;
    .user-menu-text {
        color: #ccc;
        &:hover {
            background-color: inherit !important; /* Better than asserting structure bootstrap asserts for these... */
            color: #ccc;
        }
    }

    [ng-click] {
        cursor: pointer;
        text-shadow: none;
        transition: text-shadow 0.1s linear;
        transition: color 0.1s linear;
        &:hover {
            background-color: inherit;
        }
        &:active {            
            color: #eee;
            text-shadow: 1px 1px 3px fade(#eee, 0.8);
        }
    }

    [ng-click].disabled {
        color: #666;
        cursor: default;
        &:hover {
            background-color: inherit;
        }
        &:active {
            color: #966;
            text-shadow: 1px 1px 3px fade(#966, 80%);
        }
    }
}

.facebook-login {
    background-color: #3b5998;
    &:active { background-color: #2A406D; }
    a { color: #fff; }
}

/* Support collapsable menu at lower resolutions. */
@media (max-width: @grid-float-breakpoint)
{
    .user-menu {
        width: 100%;
        text-align: right;
    }
    .user-menu-links {
        margin: 0 -15px;
    }
    .user-menu-links > * {
        border-top: 1px solid #000;
    }
    .user-menu-links > :first-child {
        border-top: none;
    }
    .user-menu-links > li > a {
        padding: 15px;
    }
}

/* Highlight editable inputs for differentiation */
input[type="tel"],input[type="text"] {
    color: @input-border-focus !important;
}
/* Make text-danger work where needed. */
input[type="tel"].text-danger,
input[type="text"].text-danger,
.cs-value-fakeinput.text-danger {
    color: @state-danger-text;
}

/* ====== CHARACTER SHEET SHARED ======= */

/* ===== ABILITY SCORES ===== */
.cs-abil-value { .cs-value-field(70px); }
.cs-abil-value-label { width: 70px; }

.cs-abil-type { .cs-label-lg; width: 50px; }
.cs-abil-type-label { margin-left: 15px; width: 50px; }


.cs-abil-mod, .cs-abil-mod-hl {
    .cs-value-fakeinput(40px);
    margin-left: 20px;
}
.cs-abil-misc {
    .cs-value-field(40px);
    margin-left: 20px;
}
.cs-abil-mod-label, .cs-abil-mod-hl-label, .cs-abil-misc-label {
    margin-left: 20px;
    padding: 0;
    width: 40px;
}

.cs-def-score {
    .cs-value-fakeinput(50px);
    font-size: 16px;
    font-weight: bold;
    height: @input-height-base;
    border-radius: @border-radius-base;
}
.cs-def-type {
    .cs-label-lg;
    width: 80px;
}

.cs-def-component() {
    width: 24px; height: 24px;
    border-radius: 0px 0px;
    font-size: 10px;
    padding: 4px;
    margin: 4px 0 0 2px;
}
span.cs-def-component { .cs-value-fakeinput(); .cs-def-component(); }
input.cs-def-component { .cs-value-field(); .cs-def-component(); }

.cs-def-score-label {
    width: 52px;
}
.cs-def-type-label {
    width: 80px;
    margin-left: 15px;
}
.cs-def-component-label {
    width: 26px;
    text-overflow: clip;
}

/* ===== POWERS ===== */
.cs-power-attack {
    padding: 0px 8px;
}
.cs-power-attack input {
    .cs-value-field(80px);
    display: inline;
}
.cs-power-name:hover {
    cursor: pointer;
    background-color: #555;
}
input.cs-power-used {
    .pull-right;
    width: 24px;
    height: 24px;
    margin-right: 8px;
    cursor: pointer;
}
.cs-power-flavor {
    font-style: italic;
    font-size: 12px;
}

/* ===== STATUS ===== */
.cs-status-current {
    .cs-label-md;
}
.cs-current-hp-value {
    .cs-value-field(60px);
    margin-left: 15px;
 }
.cs-current-hp-label, .cs-temp-hp-label {
    .cs-label-lg;
    margin-left: 5px;
    width: 30px;
}
.cs-temp-hp-value {
    .cs-value-field(60px);
    margin-left: 15px;
}

.cs-max-hp-label, .cs-bloodied-hp-label,
.cs-surges-day-label, .cs-surge-hp-label
{
    width: 60px;
    margin-left: 15px;
}

.cs-max-hp-value, .cs-surges-day-value {
    .cs-value-field(60px);
    margin-left: 15px;
}

.cs-bloodied-hp-value, .cs-surge-hp-value {
    .cs-value-fakeinput(60px);
    margin-left: 15px;
}

/* ======== META ========= */
.cs-meta-name-value {
    .form-control;
    width: 70%;
}
.cs-meta-name-button {
    .btn;
    .btn-default;
    float: right;
    margin-left: 10px;
    width: 25%;
    &:hover {
        background: none;
    }
}
.cs-meta-xp-label {
    .cs-label-md;
    width: 40px;
    text-transform: uppercase;

}
.cs-meta-xp-value {
    .cs-value-field(100px);
    margin-bottom: 5px;
}
.cs-meta-level-label {
    .cs-label-md;
    margin-left: 20px;
    width: 65px;
    text-transform: uppercase;
}
.cs-meta-level-value {
    .cs-value-fakeinput(60px);
}
.cs-meta-label {
    .cs-field-label;
    width: 106px;
    text-align: right;
}
.cs-meta-value {
    .form-control;
    .text-left;
    width: 185px;
    margin: 0 0 5px 10px;
}

.cs-character-picture {
    .img-rounded;
    width: 100%;
    margin: 5px 0;
}

.cs-image-btn-group {
    width: 100%;
}

.cs-delete-button {
    .btn;
    .btn-danger;
    width: 100%;
    margin: 10px 0;
    font-weight: bold;
}

/* SKILLS */
.cs-skill-bonus-label {
    margin: 0 0 0 10px;
    width: 40px;
}
.cs-skill-bonus { 
    .cs-value-fakeinput(40px);
}
.cs-skill-name-label {
    padding: 0 0 0 5px;
    width: 90px;
}
.cs-skill-name { 
    padding: 8px 0 0 5px;
    width: 90px;
    font-size: 14px;
    font-weight: bold;
    .text-overflow();
}
.cs-skill-abil-label {  
    width: 15px;
}
.cs-skill-abil { 
    font-size: 10px;
    padding: 12px 0 0 0;
    width: 15px;
    text-transform: uppercase;
}
.cs-skill-mod-hl-label {
    margin-left: 10px;
    width: 40px;
}
.cs-skill-mod-hl {
    .cs-value-fakeinput(40px);
}
.cs-skill-trained-label { 
    width: 34px;
}
.cs-skill-trained { 
    width: 34px;
    height: 34px;
}
.cs-skill-armor-penalty-label { 
    width: 40px;
}
input.cs-skill-armor-penalty { 
    .cs-value-field(40px);
    font-weight: normal;
    font-size: 14px !important;
}
span.cs-skill-armor-penalty {
    .text-center;
    width: 40px;
    padding: 6px 8px;
}
.cs-skill-misc-label {
    width: 40px;
    margin-left: 5px;
}
.cs-skill-misc {
    .cs-value-field(40px);
    margin-left: 5px;
    font-size: 14px;
    font-weight: normal;
}


/* Hide spinners on input[type="tel"] in Webkit. */
/* http://stackoverflow.com/questions/3790935/can-i-hide-the-html5-number-inputs-spin-box */
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
    /* display: none; <- Crashes Chrome on hover */
    -webkit-appearance: none;
    margin: 0; /* <-- Apparently some margin are still there even though it's hidden */
}
